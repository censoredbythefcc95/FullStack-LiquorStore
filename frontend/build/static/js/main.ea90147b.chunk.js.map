{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/cartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productTopRated","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","register","email","password","dispatch","a","config","headers","axios","post","data","setItem","stringify","response","message","getUserDetails","id","getState","Authorization","token","get","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","CartScreen","location","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","setEmail","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","classname","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ea90147b.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_FAIL'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_FAIL'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_FAIL'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\n\n","export const ORDER_CREATE_REQUEST = ' ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = ' ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = ' ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = ' ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = ' ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = ' ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = ' ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = ' ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = ' ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = ' ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = ' ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = ' ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = ' ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = ' ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = ' ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = ' ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = ' ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = ' ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = ' ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = ' ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = ' ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productTopRated: productTopRatedReducer,\n    productReviewCreate: productReviewCreateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n// clearStorage clears local storage. DO NOT USE, just here for future reference.\n// const clearStorage = localStorage.clear();\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage, },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools\n    (applyMiddleware(...middleware)));\n\nexport default store;","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL\n} from '../constants/productConstants';\nimport {\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL\n} from '../constants/productConstants';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_RESET:\n            return {}\n        default: \n            return state\n    }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n        default: \n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true }\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n        default: \n            return state\n    }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch(action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if(existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n            case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            }\n            case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            }\n        default:\n            return state\n    }\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS, } from '../constants/userConstants'\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, } from '../constants/userConstants'\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, } from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return { }\n        default: \n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        default: \n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return {loading: true }\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LIST_RESET:\n                return { users: [] }\n        default: \n            return state\n    }\n}\n\nexport const userDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return {loading: true }\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return {loading: true }\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_UPDATE_RESET:\n            return {\n                user: {}\n            }\n        default: \n            return state\n    }\n}\n\n\n\n","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET} from '../constants/orderConstants'\nimport { ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from \"../constants/orderConstants\"\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload,\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = {  loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch(action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch(action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] }\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch(action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState('')\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(keyword.trim()) {\n            history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} \n            placeholder='Search Products...' className='mr-sm-2 ml-sm-5'>\n\n            </Form.Control>\n            <Button type='submit' variant='outline-success' className='p-2'>\n                Search\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox;","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, } from \"../constants/userConstants\"\nimport { USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_LIST_RESET } from \"../constants/userConstants\"\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\nimport axios from 'axios';\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            './api/users/login', \n            { email, password }, \n            config \n            )\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            './api/users', \n            { name, email, password }, \n            config \n            )\n\n            dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}`, \n            config \n            )\n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n            }) \n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile`, user,\n            config \n            )\n\n            dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,\n                payload: data\n            }) \n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config \n            )\n\n            dispatch({\n                type: USER_LIST_SUCCESS,\n                payload: data\n            }) \n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        await axios.delete(\n            `/api/users/${id}`,\n            config \n            )\n\n            dispatch({\n                type: USER_DELETE_SUCCESS,\n            }) \n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/${user._id}`, user,\n            config \n            )\n\n            dispatch({\n                type: USER_UPDATE_SUCCESS,\n            }) \n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n            }) \n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n","import React from \"react\";\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                  <LinkContainer to=\"/\">\n                    <Navbar.Brand>BOOZEBROS</Navbar.Brand>\n                  </LinkContainer>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Route render={({ history }) => <SearchBox history={history} />} />\n    <Nav className=\"ml-auto\">\n    <LinkContainer to=\"/cart\">\n      <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n    </LinkContainer>\n    {userInfo ? (\n      <NavDropdown title={userInfo.name} id='username'>\n        <LinkContainer to='/profile'>\n          <NavDropdown.Item>Profile</NavDropdown.Item>\n        </LinkContainer>\n        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n      </NavDropdown>\n    ) : <LinkContainer to=\"/login\">\n    <Nav.Link><i className=\"fas fa-user\"></i>Sign In</Nav.Link>\n  </LinkContainer>}\n  {userInfo && userInfo.isAdmin && (\n    <NavDropdown title='Admin' id='adminmenu'>\n    <LinkContainer to='/admin/userlist'>\n      <NavDropdown.Item>Users</NavDropdown.Item>\n    </LinkContainer>\n    <LinkContainer to='/admin/productlist'>\n      <NavDropdown.Item>Products</NavDropdown.Item>\n    </LinkContainer>\n    <LinkContainer to='/admin/orderlist'>\n      <NavDropdown.Item>Orders</NavDropdown.Item>\n    </LinkContainer>\n    \n  </NavDropdown>\n  )}\n    </Nav>\n  </Navbar.Collapse>\n  </Container>\n</Navbar>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">\n                        Copyright &copy; BOOZEBROS\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Rating algorithm \n// if text exists, display text\n// if value of rating is greater than or equal to indicated value.\n// display star icon from font awesome based on value\n// 3.5 will display 3 full stars, and one half star\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div>\n            <span>\n                <i style={{color}}\n                className={value >= 1\n                     ? 'fas fa-star'\n                     : value >= 0.5\n                     ? 'fas fa-star-half-alt' \n                     : 'far fa-star'\n                     }\n                     ></i>\n            </span>\n            <span>\n                <i style={{color}}\n                className={value >= 2\n                     ? 'fas fa-star'\n                     : value >= 1.5\n                     ? 'fas fa-star-half-alt' \n                     : 'far fa-star'\n                     }\n                     ></i>\n            </span>\n            <span>\n                <i style={{color}}\n                className={value >= 3\n                     ? 'fas fa-star'\n                     : value >= 2.5\n                     ? 'fas fa-star-half-alt' \n                     : 'far fa-star'\n                     }\n                     ></i>\n            </span>\n            <span>\n                <i style={{color}}\n                className={value >= 4\n                     ? 'fas fa-star'\n                     : value >= 3.5\n                     ? 'fas fa-star-half-alt' \n                     : 'far fa-star'\n                     }\n                     ></i>\n            </span>\n            <span>\n                <i style={{color}}\n                className={value >= 5\n                     ? 'fas fa-star'\n                     : value >= 4.5\n                     ? 'fas fa-star-half-alt' \n                     : 'far fa-star'\n                     }\n                     ></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color: '#f8e825',\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nexport default Rating;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant=\"top\" />\n            </Link>\n\n            <Card.Body>\n            <Link to={`/product/${product._id}`}>\n                <Card.Title as=\"div\">\n                    <strong>{product.name}</strong>\n                    </Card.Title>\n            </Link>\n\n            <Card.Text as=\"div\">\n                <Rating\n                 value={product.rating}\n                 text={`${product.numReviews} reviews`}\n                 />\n            </Card.Text>\n\n            <Card.Text as='h3'>\n                ${product.price}\n            </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product;","import React from 'react';\nimport { Alert } from 'react-bootstrap';\nconst Message = ({ variant, children }) => {\n    return (\n        <div>\n            <Alert variant={variant}>\n                {children}\n            </Alert>\n        </div>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\n\nexport default Message;","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <Spinner\n         animation='border'\n          role='status'\n          style ={{ width: '100px',\n          height: '100px', \n          margin: 'auto', \n          display: 'block',\n        }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader;","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin=false, keyword = '' }) => {\n    return pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map(x => (\n                <LinkContainer key={x + 1 } to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x+1}`}>\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n}\n\nexport default Paginate","import axios from 'axios';\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL\n} from '../constants/productConstants';\nimport {\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL\n} from '../constants/productConstants';\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        await axios.delete(\n            `/api/products/${id}`,\n            config \n            )\n\n            dispatch({\n                type: PRODUCT_DELETE_SUCCESS,\n            }) \n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products`, {},\n            config \n            )\n\n            dispatch({\n                type: PRODUCT_CREATE_SUCCESS,\n                payload: data\n            }) \n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/${product._id}`, product,\n            config \n            )\n\n            dispatch({\n                type: PRODUCT_UPDATE_SUCCESS,\n                payload: data,\n            }) \n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        await axios.post(\n            `/api/products/${productId}/reviews`, review,\n            config \n            )\n\n            dispatch({\n                type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            }) \n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector((state) => state.productTopRated)\n    const { loading, error, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return loading ? <Loader /> : error ? <Message variant='danger'>\n        {error}\n    </Message> : (\n        <Carousel pause='hover' className='bg-dark'>\n            {products.map(product => (\n                <Carousel.Item key={product._id}>\n                    <Link to={`/product/${product._id}`}>\n                        <Image src={product.image} alt={product.name} fluid />\n                        <Carousel.Caption className='carousel-caption'>\n                            <h2>{product.name} (${product.price})</h2>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            ))}\n        </Carousel>\n    )\n}\n\nexport default ProductCarousel","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keyword' content={keywords} />\n        </Helmet>\n    )\n}\n\nMeta.defaultProps = {\n    title: 'Welcome to BOOZEBROS',\n    description: 'Best Booze around.',\n    keywords: 'booze, get booze, get alcohol, alcohol'\n}\n\nexport default Meta","import React, { useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Product from \"../components/Product\"\nimport { Row, Col } from \"react-bootstrap\";\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions';\nimport Meta from '../components/Meta'\n\nconst HomeScreen = ({ match }) => {\n    const keyword = match.params.keyword\n\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch()\n    \n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products, page, pages } = productList\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber))\n    }, [dispatch, keyword, pageNumber])\n\n    return (\n        <>\n        <Meta />\n        {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\n            <h1>Latest Drinks</h1>\n            {loading ? (\n                 <Loader />\n                 ) : error ? (\n                      <Message variant='danger'>\n                          {error}\n                      </Message>\n                      ) : (\n                          <>\n                           <Row>\n                {products.map(product => (\n                    <Col key={product._id}  sm={12} md={6} lg={4} xl={3}>\n                        <Product product={product} />\n                    </Col>\n                ))}\n            </Row>\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n            </>\n            )}\n        </>\n    )\n}\n\nexport default HomeScreen;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState('');\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate\n\n    useEffect(() => {\n        if(successProductReview) {\n            alert('Review Submitted! Thank you.')\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id, {\n            rating, comment\n        }))\n    }\n\n    return (\n        <>\n            <Link className=\"btn btn-light my-3\" to=\"/\">\n                Previous Page\n            </Link>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <>\n                <Meta title={product.name}/>\n                 <Row>\n                 <Col md={6}>\n                     <Image src={product.image} alt={product.name } fluid></Image>\n                 </Col>\n                 <Col md={3}>\n                     <ListGroup variant=\"flush\">\n                         <ListGroup.Item>\n                             <h2>{product.name}</h2>\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             <Rating value={product.rating}\n                                     text={`${product.numReviews} reviews`}\n                                      />\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             Price: ${product.price}\n                         </ListGroup.Item>\n                         <ListGroup.Item>\n                             Description: {product.description}\n                         </ListGroup.Item>\n                     </ListGroup>\n                 </Col>\n                 <Col md={3}>\n                     <Card>\n                         <ListGroup variant=\"flush\">\n                             <ListGroup.Item>\n                                 <Row>\n                                     <Col>\n                                         Price:\n                                     </Col>\n                                     <Col>\n                                         <strong>${product.price}</strong>\n                                     </Col>\n                                 </Row>\n                             </ListGroup.Item>\n \n                             <ListGroup.Item>\n                                 <Row>\n                                     <Col>\n                                         Status:\n                                     </Col>\n                                     <Col>\n                                         {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                                     </Col>\n                                 </Row>\n                             </ListGroup.Item>\n\n                            {product.countInStock > 0 && (\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>\n                                          Qty  \n                                        </Col>\n                                        <Col>\n                                          <Form.Control as='select'\n                                                        value={qty}\n                                                        onChange={(e) => setQty(e.target.value)}>\n                                                            {\n                                                            [...Array(product.countInStock).keys()].map(x => (\n                                                                <option key={x +1} value={x +1}>{x +1}</option>\n                                                            ))}\n                                          </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )}\n\n                             <ListGroup.Item>\n                                 <Button \n                                 onClick={addToCartHandler}\n                                 className=\"btn-block\" \n                                 type=\"button\" \n                                 disabled={product.countInStock === 0}>\n                                     Add To Cart\n                                 </Button>\n                             </ListGroup.Item>\n                         </ListGroup>\n                     </Card>\n                 </Col>\n             </Row>\n\n             <Row>\n                 <Col md={6}>\n                    <h2>Reviews</h2>\n                    {product.reviews.length === 0 && <Message>No Reviews.</Message>}\n                    <ListGroup variant='flush'>\n                        {product.reviews.map(review => (\n                            <ListGroup.Item key={review._id}>\n                                <strong>{review.name}</strong>\n                                <Rating value={review.rating} />\n                                <p>{review.createdAt.substring(0, 10)}</p>\n                                <p>{review.comment}</p>\n                            </ListGroup.Item>\n                        ))}\n                        <ListGroup.Item>\n                            <h2>Write a Customer Review...</h2>\n                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n                            {userInfo ? (\n                                <Form onSubmit={submitHandler}>\n                                    <Form.Group controlId='rating'>\n                                        <Form.Label>\n                                            Rating\n                                        </Form.Label>\n                                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\n                                            <option value=''>Select...</option>\n                                            <option value='1'>1 - Poor </option>\n                                            <option value='2'>2 - Fair </option> \n                                            <option value='3'>3 - Good </option> \n                                            <option value='4'>4 - Very Good </option> \n                                            <option value='5'>5 - Excellent </option>   \n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Group controlId='comment'>\n                                        <Form.Label>Comment</Form.Label>\n                                        <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}>\n\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Button type='submit' variant='primary'>\n                                        Submit Review\n                                    </Button>\n                                </Form>\n                            ) : <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>}\n                        </ListGroup.Item>\n                    </ListGroup>                                            \n                 </Col>\n             </Row>\n        </>\n            )}     \n        </>\n    )\n}\n\nexport default ProductScreen;","import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: { \n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart \n\n    console.log(cartItems)\n\n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    console.log(qty)\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart </h1>\n                {cartItems.length === 0 ? <Message>Your cart is empty. <Link to='/'>Go Back</Link></Message> : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                    <Form.Control as='select'\n                                                        value={item.qty}\n                                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                                            {\n                                                            [...Array(item.countInStock).keys()].map(x => (\n                                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\n                                                            ))}\n                                          </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n               <Card>\n                   <ListGroup variant='flush'>\n                       <ListGroup.Item>\n                           <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items </h2>\n                           ${cartItems.reduce((acc, item) => acc +item.qty * item.price, 0).toFixed(2)}\n                       </ListGroup.Item>\n                       <ListGroup.Item>\n                           <Button type='button'\n                           className='btn-block'\n                           disabled={cartItems.length === 0}\n                           onClick={checkoutHandler}>\n                               Proceed to Checkout\n                           </Button>\n                       </ListGroup.Item>\n                   </ListGroup>\n               </Card>                                                 \n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer;","import React, {useState, useEffect } from 'react'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo } = userLogin \n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n        const submitHandler = (e) => {\n            e.preventDefault()\n            dispatch(login(email, password))\n        }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>\n                        Email Address\n                    </Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email}\n                    onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                    <Form.Label>\n                        Password\n                    </Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password}\n                    onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen;","import React, {useState, useEffect } from 'react'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector((state) => state.userRegister)\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n        const submitHandler = (e) => {\n            e.preventDefault()\n            dispatch(register(name, email, password))\n\n            if (password !== confirmPassword) {\n                setMessage('Passwords do not match.')\n            } else {\n                dispatch(register(name, email, password))\n            }\n        }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                    <Form.Label>\n                        Name\n                    </Form.Label>\n                    <Form.Control type='name' placeholder='Enter name' value={name}\n                    onChange={(e) => setName(e.target.value)}>\n                    </Form.Control>\n                    </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>\n                        Email Address\n                    </Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email}\n                    onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                    <Form.Label>\n                        Password\n                    </Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password}\n                    onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>\n                        Confirm Password\n                    </Form.Label>\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                Have an account? {' '}\n                 <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen;","import React, {useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector((state) => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(!user.name) {\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user])\n\n        const submitHandler = (e) => {\n            e.preventDefault()\n\n            if (password !== confirmPassword) {\n                setMessage('Passwords do not match.')\n            } else {\n                dispatch(updateUserProfile({ id: user._id, name, email, password }))\n            }\n        }\n\n    return (\n        <Row>\n            <Col md={3}>\n            <h2>User Profile</h2>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile updated. Changes will apply the next time you log in.</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                    <Form.Label>\n                        Name\n                    </Form.Label>\n                    <Form.Control type='name' placeholder='Enter name' value={name}\n                    onChange={(e) => setName(e.target.value)}>\n                    </Form.Control>\n                    </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>\n                        Email Address\n                    </Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email}\n                    onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                    <Form.Label>\n                        Password\n                    </Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password}\n                    onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>\n                        Confirm Password\n                    </Form.Label>\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Update\n                </Button>\n            </Form>\n            </Col>\n            <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen;","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from '../constants/orderConstants';\nimport { ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.post(\n            `./api/orders`, order,\n            config \n            )\n\n            dispatch({\n                type: ORDER_CREATE_SUCCESS,\n                payload: data,\n            }) \n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}`, \n            config \n            )\n\n            dispatch({\n                type: ORDER_DETAILS_SUCCESS,\n                payload: data,\n            }) \n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult, \n            config \n            )\n\n            dispatch({\n                type: ORDER_PAY_SUCCESS,\n                payload: data,\n            }) \n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config \n            )\n\n            dispatch({\n                type: ORDER_DELIVER_SUCCESS,\n                payload: data,\n            }) \n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders`,\n            config \n            )\n\n            dispatch({\n                type: ORDER_LIST_MY_SUCCESS,\n                payload: data,\n            }) \n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders`,\n            config \n            )\n\n            dispatch({\n                type: ORDER_LIST_SUCCESS,\n                payload: data,\n            }) \n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <div>\n            <Nav className='justify-content-center mb-4'>\n                <Nav.Item>\n                    {step1 ? (\n                        <LinkContainer to='/login'>\n                            <Nav.Link>\n                                Sign In\n                            </Nav.Link>\n                        </LinkContainer>\n                    ) : ( <Nav.Link disabled>\n                                Sign In\n                        </Nav.Link>)}\n                </Nav.Item>\n\n                <Nav.Item>\n                    {step2 ? (\n                        <LinkContainer to='/shipping'>\n                            <Nav.Link>\n                                Shipping\n                            </Nav.Link>\n                        </LinkContainer>\n                    ) : ( <Nav.Link disabled>\n                               Shipping \n                        </Nav.Link>)}\n                </Nav.Item>\n\n                <Nav.Item>\n                    {step3 ? (\n                        <LinkContainer to='/payment'>\n                            <Nav.Link>\n                                Payment\n                            </Nav.Link>\n                        </LinkContainer>\n                    ) : ( <Nav.Link disabled>\n                                Payment\n                        </Nav.Link>)}\n                </Nav.Item>\n\n                <Nav.Item>\n                    {step4 ? (\n                        <LinkContainer to='/placeorder'>\n                            <Nav.Link>\n                                Place Order\n                            </Nav.Link>\n                        </LinkContainer>\n                    ) : ( <Nav.Link disabled>\n                                Place Order\n                        </Nav.Link>)}\n                </Nav.Item>\n            </Nav>\n        </div>\n    )\n}\n\nexport default CheckoutSteps;","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from \"../actions/cartActions\"\nimport CheckoutSteps from \"../components/CheckoutSteps\"\n\nconst ShippingScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n       <FormContainer>\n           <CheckoutSteps step1 step2 />\n           <h1>Shipping</h1>\n           <Form onSubmit={submitHandler}>\n           <Form.Group controlId='address'>\n                    <Form.Label>\n                        Address\n                    </Form.Label>\n                    <Form.Control type='text' placeholder='Enter address' value={address} required\n                    onChange={(e) => setAddress(e.target.value)}>\n                    </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='city'>\n                    <Form.Label>\n                        City\n                    </Form.Label>\n                    <Form.Control type='text' placeholder='Enter city' value={city} required\n                    onChange={(e) => setCity(e.target.value)}>\n                    </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='postalCode'>\n                    <Form.Label>\n                        Postal Code\n                    </Form.Label>\n                    <Form.Control type='text' placeholder='Enter postal code' value={postalCode} required\n                    onChange={(e) => setPostalCode(e.target.value)}>\n                    </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='country'>\n                    <Form.Label>\n                        Country\n                    </Form.Label>\n                    <Form.Control type='text' placeholder='Enter country' value={country} required\n                    onChange={(e) => setCountry(e.target.value)}>\n                    </Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant='primary'>\n                Continue\n            </Button>\n\n           </Form>\n       </FormContainer>\n       \n    )\n}\n\nexport default ShippingScreen;","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { savePaymentMethod } from \"../actions/cartActions\"\nimport CheckoutSteps from \"../components/CheckoutSteps\"\n\nconst PaymentScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    if(!shippingAddress) {\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n       <FormContainer>\n           <CheckoutSteps step1 step2 step3 />\n           <h1>Payment Method</h1>\n           <Form onSubmit={submitHandler}>\n            <Form.Group>\n                <Form.Label as='legend'>\n                    Select Method\n                </Form.Label>\n                <Col>\n                <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal'\n                name='paymentMethod' value='PayPal' checked onChange={(e) => setPaymentMethod(e.target.value)}> \n                </Form.Check>\n                </Col>\n            </Form.Group>\n\n            <Button type=\"submit\" variant='primary'>\n                Continue\n            </Button>\n\n           </Form>\n       </FormContainer>\n       \n    )\n}\n\nexport default PaymentScreen;","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card, } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from \"../components/CheckoutSteps\"\nimport { createOrder } from '../actions/orderActions';\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    const cart = useSelector(state => state.cart)\n\n    // Calculate prices.\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc,item) => acc + item.price * \n    item.qty, 0\n    ))\n\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100 )\n        cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n    cart.totalPrice =  (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if(success) {\n            history.push(`/order/${order._id}`)\n        }\n        // eslint-disable-next-line\n    },[history, success])\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping Address</h2>\n                            <p>\n                                <strong>Address: </strong>\n                                {cart.shippingAddress.address},\n                                {cart.shippingAddress.city}{' '}\n                                {cart.shippingAddress.postalCode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty.</Message> : (\n                               <ListGroup variant='flush'>\n                                   {cart.cartItems.map((item, index) => (\n                                       <ListGroup.Item key={index}>\n                                           <Row>\n                                               <Col md={1}>\n                                                    <Image src={item.image}\n                                                    alt={item.name}\n                                                    fluid rounded />\n                                               </Col>\n                                               <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                               </Col>\n                                               <Col md={4}>\n                                                   {item.qty} x ${item.price} = ${item.qty * item.price}\n                                               </Col>\n                                            </Row>\n                                       </ListGroup.Item>\n                                   ))}\n                               </ListGroup> \n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                 <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Items\n                                    </Col>\n                                    <Col>\n                                    ${cart.itemsPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Shipping\n                                    </Col>\n                                    <Col>\n                                    ${cart.shippingPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Tax\n                                    </Col>\n                                    <Col>\n                                    ${cart.taxPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Total\n                                    </Col>\n                                    <Col>\n                                    ${cart.totalPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        {error && <Message variant='danger'>{error}</Message>}\n                                    </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type='button'\n                                className='btn-block'\n                                disabled={cart.cartItems === 0}\n                                onClick={placeOrderHandler}>\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>                   \n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen;","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from \"../components/Loader\"\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    if(!loading) {\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n    \n        // Calculate prices.\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc,item) => acc + item.price * \n        item.qty, 0\n        ))\n    }\n\n\n    // checking if orderIf matches the ID in the url. If it does not, then dispatch\n    // orderDetails to fetch the most recent order\n    // also I am passing in dispatch as a dependency because the compiler\n    //keeps complaining about it, although it isn't actually neccesary.\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/login')\n        }\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if(!order || successPay || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET})            \n\n            dispatch(getOrderDetails(orderId))\n        } else if(!order.isPaid) {\n            if(!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver, history, userInfo])\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}\n    </Message> : <>\n        <h1>Order {order._id}</h1>\n        <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong> {order.user.name} </p>\n                            <p><strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                            <p>\n                                <strong>Address: </strong>\n                                {order.shippingAddress.address},\n                                {order.shippingAddress.city}{' '}\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? ( <Message variant='success'>Delivered on {order.deliveredAt}</Message> ) : (\n                            <Message variant='danger'>Not Delivered</Message> )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                            <strong>Method: </strong>\n                            {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? ( <Message variant='success'>Paid on {order.paidAt}</Message> ) : (\n                            <Message variant='danger'>Not Paid</Message> )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? <Message>Order is empty.</Message> : (\n                               <ListGroup variant='flush'>\n                                   {order.orderItems.map((item, index) => (\n                                       <ListGroup.Item key={index}>\n                                           <Row>\n                                               <Col md={1}>\n                                                    <Image src={item.image}\n                                                    alt={item.name}\n                                                    fluid rounded />\n                                               </Col>\n                                               <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                               </Col>\n                                               <Col md={4}>\n                                                   {item.qty} x ${item.price} = ${item.qty * item.price}\n                                               </Col>\n                                            </Row>\n                                       </ListGroup.Item>\n                                   ))}\n                               </ListGroup> \n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                 <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Items\n                                    </Col>\n                                    <Col>\n                                    ${order.itemsPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Shipping\n                                    </Col>\n                                    <Col>\n                                    ${order.shippingPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Tax\n                                    </Col>\n                                    <Col>\n                                    ${order.taxPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                    Total\n                                    </Col>\n                                    <Col>\n                                    ${order.totalPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>               \n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? ( <Loader /> ) : (\n                                        <PayPalButton amount={order.totalPrice}\n                                        onSuccess={successPaymentHandler} />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                            {loadingDeliver && <Loader />}\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                <ListGroup.Item>\n                                    <Button type='button' className='btn btn-block'\n                                    onClick={deliverHandler}>\n                                        Mark as Delivered?\n                                    </Button>\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup>\n                    </Card>\n                </Col>                   \n            </Row>\n            </>\n}   \n\nexport default OrderScreen;","import React, { useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen  = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo, successDelete])\n\n    const deleteHandler = (id) => {\n        if(window.confirm('This action will permanently delete this user from the database. Are you sure you want to proceed?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>\n                {error}\n            </Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                <td>\n                                    {user.isAdmin ? ( <i className=\"fas fa-check\"\n                                    style={{ color: 'green'}}></i>) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                        <Button variant='light'\n                                        className='btn-sm'>\n                                            <i className='fas fa-edit'>\n\n                                            </i>\n                                        </Button>\n                                    </LinkContainer>\n\n                                    <Button variant='danger'\n                                    className='btn-sm'\n                                    onClick={() => deleteHandler(user._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                    \n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </div>\n    )\n}\n\nexport default UserListScreen;","import React, {useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userUpdate = useSelector((state) => state.userUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\n\n\n    useEffect(() => {\n        if(successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n        if (!user.name || user._id !== userId) {\n            dispatch(getUserDetails(userId))\n          } else {\n            setName(user.name)\n            setEmail(user.email)\n            setIsAdmin(user.isAdmin)\n          }\n        }\n    }, [dispatch, history, userId, user, successUpdate])\n\n        const submitHandler = (e) => {\n            e.preventDefault()\n            dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n        }\n\n    return (\n        <>\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n            <h1>Edit User</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                        <Form.Label>\n                            Name\n                        </Form.Label>\n                        <Form.Control type='name' placeholder='Enter name' value={name}\n                        onChange={(e) => setName(e.target.value)}>\n                        </Form.Control>\n                        </Form.Group>\n    \n                    <Form.Group controlId='email'>\n                        <Form.Label>\n                            Email Address\n                        </Form.Label>\n                        <Form.Control type='email' placeholder='Enter email' value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n                        </Form.Control>\n                        </Form.Group>\n    \n                        <Form.Group controlId='isadmin'>\n                        <Form.Check type='checkbox' label='Is Admin'\n                        checked={isAdmin}\n                        onChange={(e) => setIsAdmin(e.target.checked)}>\n                        </Form.Check>\n                    </Form.Group>\n    \n\n    \n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            )}      \n        </FormContainer>\n        </>\n        \n    )\n}\n\nexport default UserEditScreen;","import React, { useEffect } from 'react'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen  = ({ history, match }) => {\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, page, pages } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if(!userInfo.isAdmin) {\n            history.push('/login')\n        } \n\n        if(successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts('', pageNumber))\n        }\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\n\n    const deleteHandler = (id) => {\n        if(window.confirm('This action will permanently delete this product from the database. Are you sure you want to proceed?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n                <Row classname='align-items-center'>\n                    <Col>\n                        <h1>Products</h1>\n                    </Col>\n                    <Col className='text-right'>\n                        <Button className='my-3'\n                        onClick={createProductHandler}>\n                           <i className='fas fa-plus'></i> Create Product\n                        </Button>\n                    </Col>\n                </Row>\n                {loadingDelete && <Loader />}\n                {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n                {loadingCreate && <Loader />}\n                {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>\n                {error}\n            </Message> : (\n                <>\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>PRICE</th>\n                            <th>CATEGORY</th>\n                            <th>BRAND</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {products.map(product => (\n                            <tr key={product._id}>\n                                <td>{product._id}</td>\n                                <td>{product.name}</td>\n                                <td>${product.price}</td>\n                                <td>\n                                    {product.category}\n                                </td>\n                                <td>\n                                    {product.brand}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                        <Button variant='light'\n                                        className='btn-sm'>\n                                            <i className='fas fa-edit'>\n\n                                            </i>\n                                        </Button>\n                                    </LinkContainer>\n\n                                    <Button variant='danger'\n                                    className='btn-sm'\n                                    onClick={() => deleteHandler(product._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                    \n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <Paginate pages={pages} page={page} isAdmin={true} />\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default ProductListScreen;","import React, {useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } = productDetails\n\n\n    const productUpdate = useSelector((state) => state.productUpdate)\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n    useEffect(() => {\n        if(successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n        if (!product.name || product._id !== productId) {\n            dispatch(listProductDetails(productId))\n          } else {\n            setName(product.name)\n            setPrice(product.price)\n            setImage(product.image)\n            setBrand(product.brand)\n            setCategory(product.category)\n            setCountInStock(product.countInStock)\n            setDescription(product.description)\n          }\n        }\n    }\n, [dispatch, history, productId, product, successUpdate])\n\n        const uploadFileHandler =  async (e) => {\n            const file = e.target.files[0]\n            const formData = new FormData()\n            formData.append('image', file)\n            setUploading(true)\n\n            try {\n                const config = {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }\n\n                const { data } = await axios.post('/api/upload', formData, config)\n\n                setImage(data)\n                setUploading(false)\n            } catch (error) {\n                console.error(error)\n                setUploading(false)\n            }\n        }\n\n        const submitHandler = (e) => {\n            e.preventDefault()\n            dispatch(updateProduct({\n                _id: productId,\n                name,\n                price,\n                image,\n                brand, category, description,\n                countInStock\n            }))\n        }\n\n    return (\n        <>\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n            <h1>Edit Product</h1>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                        <Form.Label>\n                            Name\n                        </Form.Label>\n                        <Form.Control type='name' placeholder='Enter name' value={name}\n                        onChange={(e) => setName(e.target.value)}>\n                        </Form.Control>\n                        </Form.Group>\n    \n                    <Form.Group controlId='price'>\n                        <Form.Label>\n                            Price\n                        </Form.Label>\n                        <Form.Control type='number' placeholder='Enter price' value={price}\n                        onChange={(e) => setPrice(e.target.value)}>\n                        </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='image'>\n                        <Form.Label>\n                            Image\n                        </Form.Label>\n                        <Form.Control type='text' placeholder='Enter image URL' value={image}\n                        onChange={(e) => setImage(e.target.value)}>\n                        </Form.Control>\n                        <Form.File id='image-file' label='Choose file'\n                        custom onChange={uploadFileHandler}>\n\n                        </Form.File>\n                        {uploading && <Loader />}\n                    </Form.Group>\n    \n                    <Form.Group controlId='brand'>\n                        <Form.Label>\n                            Brand\n                        </Form.Label>\n                        <Form.Control type='text' placeholder='Enter brand name' value={brand}\n                        onChange={(e) => setBrand(e.target.value)}>\n                        </Form.Control>\n                        \n                    </Form.Group>\n\n                        <Form.Group controlId='countInStock'>\n                        <Form.Label>\n                            Quantity in Stock\n                        </Form.Label>\n                        <Form.Control type='number' placeholder='Enter countInStock' value={countInStock}\n                        onChange={(e) => setCountInStock(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='category'>\n                        <Form.Label>\n                            Category\n                        </Form.Label>\n                        <Form.Control type='text' placeholder='Enter category' value={category}\n                        onChange={(e) => setCategory(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='description'>\n                        <Form.Label>\n                            Description\n                        </Form.Label>\n                        <Form.Control type='text' placeholder='Enter description' value={description}\n                        onChange={(e) => setDescription(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n\n\n    \n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            )}      \n        </FormContainer>\n        </>\n        \n    )\n}\n\nexport default ProductEditScreen;","import React, { useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen  = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>\n                {error}\n            </Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user && order.user.name}</td>\n                                <td>\n                                    {order.createdAt.substring(0, 10)}\n                                </td>\n                                <td>\n                                    ${order.totalPrice}\n                                </td>\n                                <td>\n                                    {order.isPaid ? (\n                                        order.paidAt.substring(0, 10)\n                                    ) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}\n                                </td>\n                                <td>\n                                    {order.isDelivered ? (\n                                        order.paidAt.substring(0, 10)\n                                    ) : (\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button variant='light'\n                                        className='btn-sm'>\n                                            Details\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </div>\n    )\n}\n\nexport default OrderListScreen;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/cartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\"\nimport ProfileScreen from \"./screens/ProfileScreen\"\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\"\nimport UserEditScreen from \"./screens/UserEditScreen\"\nimport ProductListScreen from \"./screens/ProductListScreen\"\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nconst App = () => {\n  return (\n    <Router>\n    <Header />\n    <main className=\"py-3\">\n      <Container>\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/\" component={HomeScreen} exact />\n        <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n        <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} exact />\n        <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n        <Route path=\"/product/:id\" component={ProductScreen} />\n        <Route path=\"/cart/:id?\" component={CartScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/shipping\" component={ShippingScreen} />\n        <Route path=\"/payment\" component={PaymentScreen} />\n        <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n        <Route path=\"/order/:id\" component={OrderScreen} />\n        <Route path='/admin/userlist' component={UserListScreen} />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        <Route path='/admin/productlist' component={ProductListScreen} exact />\n        <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n        <Route path='/admin/orderlist' component={OrderListScreen} />\n      </Container>\n    </main>\n    <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store.js'\nimport './index.css';\nimport \"./bootstrap.min-2.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}